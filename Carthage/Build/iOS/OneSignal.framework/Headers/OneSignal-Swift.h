// Generated by Apple Swift version 2.3 (swiftlang-800.10.6 clang-800.0.24.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import UserNotifications;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@protocol OneSignalNotificationCenterDelegate;
@class NSDictionary;
@class NSString;


/// OneSignal provides a high level interface to interact with OneSignal's push service. OneSignal can only be globally accessed with shared configuration settings. You cannot create an instance of this class.
///
/// @objc
/// Include <code>#import "OneSignal/OneSignal-Swift.h"
/// </code> in your application files to access OneSignal's methods.
///
/// @Swift
/// Include <code>#import "Import OneSignal
/// </code> in your application files to access OneSignal's methods.
///
/// <h3>Setting up the SDK</h3>
/// Follow the documentation from http://documentation.gamethrive.com/v1.0/docs/installing-the-gamethrive-ios-sdk to setup with your game.
SWIFT_CLASS_NAMED("OneSignal")
@interface OneSignal : NSObject
+ (id <OneSignalNotificationCenterDelegate> _Nullable)notificationCenterDelegate;
+ (void)setNotificationCenterDelegate:(id <OneSignalNotificationCenterDelegate> _Nullable)value;
+ (void)initWithLaunchOptions:(NSDictionary * _Nullable)launchOptions appId:(NSString * _Nonnull)appId handleNotification:(void (^ _Nullable)(NSString * _Nonnull, NSDictionary * _Nonnull, BOOL))callback autoRegister:(BOOL)autoRegister;
@end


@interface OneSignal (SWIFT_EXTENSION(OneSignal))
@end


@interface OneSignal (SWIFT_EXTENSION(OneSignal))
@end

@class UNUserNotificationCenter;
@class UNNotificationResponse;
@class UNNotification;

@interface OneSignal (SWIFT_EXTENSION(OneSignal)) <UNUserNotificationCenterDelegate>
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
@end


@interface OneSignal (SWIFT_EXTENSION(OneSignal))
@end


@interface OneSignal (SWIFT_EXTENSION(OneSignal))
+ (void)promptLocation;
@end

@class NSError;

@interface OneSignal (SWIFT_EXTENSION(OneSignal))
+ (void)postNotification:(NSDictionary * _Nonnull)jsonData;
+ (void)postNotification:(NSDictionary * _Nonnull)jsonData onSuccess:(void (^ _Nullable)(NSDictionary * _Nonnull))successBlock onFailure:(void (^ _Nullable)(NSError * _Nonnull))failureBlock;
@end

@class NSArray;

@interface OneSignal (SWIFT_EXTENSION(OneSignal))
+ (NSArray * _Nonnull)getSoundFiles;
+ (void)setSubscription:(BOOL)enable;
+ (void)enableInAppAlertNotification:(BOOL)enable;
@end


@interface OneSignal (SWIFT_EXTENSION(OneSignal)) <UIApplicationDelegate>
@end


@interface OneSignal (SWIFT_EXTENSION(OneSignal))
+ (void)sendTags:(NSDictionary * _Nonnull)keyValuePair;
+ (void)sendTags:(NSDictionary * _Nonnull)keyValuePair successBlock:(void (^ _Nullable)(NSDictionary * _Nonnull))successBlock failureBlock:(void (^ _Nullable)(NSError * _Nonnull))failureBlock;
+ (void)sendTag:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
+ (void)sendTag:(NSString * _Nonnull)key value:(NSString * _Nonnull)value successBlock:(void (^ _Nullable)(NSDictionary * _Nonnull))successBlock failureBlock:(void (^ _Nullable)(NSError * _Nonnull))failureBlock;
+ (void)getTags:(void (^ _Nullable)(NSDictionary * _Nonnull))successBlock failureBlock:(void (^ _Nullable)(NSError * _Nonnull))failureBlock;
+ (void)getTags:(void (^ _Nonnull)(NSDictionary * _Nonnull))successBlock;
+ (void)deleteTag:(NSString * _Nonnull)key successBlock:(void (^ _Nonnull)(NSDictionary * _Nonnull))successBlock failureBlock:(void (^ _Nonnull)(NSError * _Nonnull))failureBlock;
+ (void)deleteTag:(NSString * _Nonnull)key;
+ (void)deleteTags:(NSArray * _Nonnull)keys successBlock:(void (^ _Nullable)(NSDictionary * _Nonnull))successBlock failureBlock:(void (^ _Nullable)(NSError * _Nonnull))failureBlock;
+ (void)deleteTags:(NSArray * _Nonnull)keys;
@end


@interface OneSignal (SWIFT_EXTENSION(OneSignal))
+ (void)IdsAvailable:(void (^ _Nonnull)(NSString * _Nonnull, NSString * _Nullable))idsAvailableBlock;
+ (void)registerForPushNotifications;
@end


SWIFT_PROTOCOL("_TtP9OneSignal35OneSignalNotificationCenterDelegate_")
@protocol OneSignalNotificationCenterDelegate
@optional
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
@end


@interface UIApplication (SWIFT_EXTENSION(OneSignal))
+ (void)initialize;
@end

#pragma clang diagnostic pop
